int fib(int n) {

	if(n<3) {
		return 1;		
	} else {
		fib(n-1) + fib(n-2)
	}

}

main(){
int n;

fib(n);

}




001001 11101111011111111111110100		
	ADDIU(rt=rs+Imm) 	[$29(rs) 0x 0], [$29(rt) 0x 0], [im: 0xfff4] => [$29(rt) 0xfff4]

<追加:between1-2>
001001 00100000000000000100000000		
	ADDIU $4 Imm

</追加:between1-2>
101011 11101111110000000000001000		
	SW	[$29(rs) 0xfff4], [$31(rt) 0x 0], [offset: 0x   8] 

101011 11101001000000000000000100		
	SW	[$29(rs) 0xfff4], [$ 4(rt) 0x 0], [offset: 0x   4] 

000000 00100000000100100000 100001		
	ADDU :	[$ 4(rs) 0x 0], [$ 0(rt) 0x 0] => [rd:9] 0x 0

001001 00000010100000000000000001		
	ADDIU(rt=rs+Imm) 	[$ 0(rs) 0x 0], [$10(rt) 0x 0], [im: 0x   1] => [$10(rt) 0x 1]

000000 01010001000100000000 101010		
	[function:2a]
	SLT (rs < rt?) :	[$10(rs) 0x 1], [$ 4(rt) 0x 0] 	=> [$ 8(rd)] 0x   0, <FALSE>

000100 00000010000000000000001111
	BEQ < rs=rt? -> [$ 0(rs) 0x 0], [$ 8(rt) 0x 0]
	<TRUE & JUMP> -> <jump_to> 0x   1

001001 00100001001111111111111111		
	SW	[$29(rs) 0xfff4], [$31(rt) 0x 0], [offset: 0x   8] 

000011 00000000000000000000000000		

101011 11101000100000000000000000		

100011 11101001000000000000000100		

001001 00100001001111111111111110		

000011 00000000000000000000000000		

100011 11101010010000000000000000		

000000 01001000100100100000 100001		

100011 11101111110000000000001000		

001001 11101111010000000000001100		

000000 01001000000001000000 100001		

000000 00000000001111100000 001000		

