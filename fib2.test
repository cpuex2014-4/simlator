
=================== Initialize ====================
	[instruction: 0x24080000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 8], [im: 0x   0] 
=> 	rt:R[ 8] 0x 0
	[instruction: 0x24090001 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 9], [im: 0x   1] 
=> 	rt:R[ 9] 0x 0
	[instruction: 0x240a0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[10], [im: 0x   0] 
=> 	rt:R[10] 0x 0
	[instruction: 0x240b0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[11], [im: 0x   0] 
=> 	rt:R[11] 0x 0
	[instruction: 0x164602a / 	[function:2a]
	<Function: SLT> < rs < rt? > :rs:R[11] 0x 0, rt:R[4] 0x 0
	=> rd:R[12] 0x   0, <FALSE>
	[instruction: 0x100c0000 / opcode : BEQ < rs=rt? -> 
	[instruction] 0x100c0000
	rs:R[ 0] 0x 0, rt:R[12] 0x 0
	<TRUE & JUMP> -> <jump_to> 0x   0
	[instruction: 0x24080000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 8], [im: 0x   0] 
=> 	rt:R[ 8] 0x 0
	[instruction: 0x24090001 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 9], [im: 0x   1] 
=> 	rt:R[ 9] 0x 0
	[instruction: 0x240a0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[10], [im: 0x   0] 
=> 	rt:R[10] 0x 0
	[instruction: 0x240b0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[11], [im: 0x   0] 
=> 	rt:R[11] 0x 0
	[instruction: 0x164602a / 	[function:2a]
	<Function: SLT> < rs < rt? > :rs:R[11] 0x 0, rt:R[4] 0x 0
	=> rd:R[12] 0x   0, <FALSE>
	[instruction: 0x100c0000 / opcode : BEQ < rs=rt? -> 
	[instruction] 0x100c0000
	rs:R[ 0] 0x 0, rt:R[12] 0x 0
	<TRUE & JUMP> -> <jump_to> 0x   0
	[instruction: 0x24080000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 8], [im: 0x   0] 
=> 	rt:R[ 8] 0x 0
	[instruction: 0x24090001 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 9], [im: 0x   1] 
=> 	rt:R[ 9] 0x 0
	[instruction: 0x240a0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[10], [im: 0x   0] 
=> 	rt:R[10] 0x 0
	[instruction: 0x240b0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[11], [im: 0x   0] 
=> 	rt:R[11] 0x 0
	[instruction: 0x164602a / 	[function:2a]
	<Function: SLT> < rs < rt? > :rs:R[11] 0x 0, rt:R[4] 0x 0
	=> rd:R[12] 0x   0, <FALSE>
	[instruction: 0x100c0000 / opcode : BEQ < rs=rt? -> 
	[instruction] 0x100c0000
	rs:R[ 0] 0x 0, rt:R[12] 0x 0
	<TRUE & JUMP> -> <jump_to> 0x   0
	[instruction: 0x24080000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 8], [im: 0x   0] 
=> 	rt:R[ 8] 0x 0
	[instruction: 0x24090001 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 9], [im: 0x   1] 
=> 	rt:R[ 9] 0x 0
	[instruction: 0x240a0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[10], [im: 0x   0] 
=> 	rt:R[10] 0x 0
	[instruction: 0x240b0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[11], [im: 0x   0] 
=> 	rt:R[11] 0x 0
	[instruction: 0x164602a / 	[function:2a]
	<Function: SLT> < rs < rt? > :rs:R[11] 0x 0, rt:R[4] 0x 0
	=> rd:R[12] 0x   0, <FALSE>
	[instruction: 0x100c0000 / opcode : BEQ < rs=rt? -> 
	[instruction] 0x100c0000
	rs:R[ 0] 0x 0, rt:R[12] 0x 0
	<TRUE & JUMP> -> <jump_to> 0x   0
	[instruction: 0x24080000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 8], [im: 0x   0] 
=> 	rt:R[ 8] 0x 0
	[instruction: 0x24090001 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 9], [im: 0x   1] 
=> 	rt:R[ 9] 0x 0
	[instruction: 0x240a0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[10], [im: 0x   0] 
=> 	rt:R[10] 0x 0
	[instruction: 0x240b0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[11], [im: 0x   0] 
=> 	rt:R[11] 0x 0
	[instruction: 0x164602a / 	[function:2a]
	<Function: SLT> < rs < rt? > :rs:R[11] 0x 0, rt:R[4] 0x 0
	=> rd:R[12] 0x   0, <FALSE>
	[instruction: 0x100c0000 / opcode : BEQ < rs=rt? -> 
	[instruction] 0x100c0000
	rs:R[ 0] 0x 0, rt:R[12] 0x 0
	<TRUE & JUMP> -> <jump_to> 0x   0
	[instruction: 0x24080000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 8], [im: 0x   0] 
=> 	rt:R[ 8] 0x 0
	[instruction: 0x24090001 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 9], [im: 0x   1] 
=> 	rt:R[ 9] 0x 0
	[instruction: 0x240a0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[10], [im: 0x   0] 
=> 	rt:R[10] 0x 0
	[instruction: 0x240b0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[11], [im: 0x   0] 
=> 	rt:R[11] 0x 0
	[instruction: 0x164602a / 	[function:2a]
	<Function: SLT> < rs < rt? > :rs:R[11] 0x 0, rt:R[4] 0x 0
	=> rd:R[12] 0x   0, <FALSE>
	[instruction: 0x100c0000 / opcode : BEQ < rs=rt? -> 
	[instruction] 0x100c0000
	rs:R[ 0] 0x 0, rt:R[12] 0x 0
	<TRUE & JUMP> -> <jump_to> 0x   0
	[instruction: 0x24080000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 8], [im: 0x   0] 
=> 	rt:R[ 8] 0x 0
	[instruction: 0x24090001 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 9], [im: 0x   1] 
=> 	rt:R[ 9] 0x 0
	[instruction: 0x240a0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[10], [im: 0x   0] 
=> 	rt:R[10] 0x 0
	[instruction: 0x240b0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[11], [im: 0x   0] 
=> 	rt:R[11] 0x 0
	[instruction: 0x164602a / 	[function:2a]
	<Function: SLT> < rs < rt? > :rs:R[11] 0x 0, rt:R[4] 0x 0
	=> rd:R[12] 0x   0, <FALSE>
	[instruction: 0x100c0000 / opcode : BEQ < rs=rt? -> 
	[instruction] 0x100c0000
	rs:R[ 0] 0x 0, rt:R[12] 0x 0
	<TRUE & JUMP> -> <jump_to> 0x   0
	[instruction: 0x24080000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 8], [im: 0x   0] 
=> 	rt:R[ 8] 0x 0
	[instruction: 0x24090001 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 9], [im: 0x   1] 
=> 	rt:R[ 9] 0x 0
	[instruction: 0x240a0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[10], [im: 0x   0] 
=> 	rt:R[10] 0x 0
	[instruction: 0x240b0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[11], [im: 0x   0] 
=> 	rt:R[11] 0x 0
	[instruction: 0x164602a / 	[function:2a]
	<Function: SLT> < rs < rt? > :rs:R[11] 0x 0, rt:R[4] 0x 0
	=> rd:R[12] 0x   0, <FALSE>
	[instruction: 0x100c0000 / opcode : BEQ < rs=rt? -> 
	[instruction] 0x100c0000
	rs:R[ 0] 0x 0, rt:R[12] 0x 0
	<TRUE & JUMP> -> <jump_to> 0x   0
	[instruction: 0x24080000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 8], [im: 0x   0] 
=> 	rt:R[ 8] 0x 0
	[instruction: 0x24090001 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 9], [im: 0x   1] 
=> 	rt:R[ 9] 0x 0
	[instruction: 0x240a0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[10], [im: 0x   0] 
=> 	rt:R[10] 0x 0
	[instruction: 0x240b0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[11], [im: 0x   0] 
=> 	rt:R[11] 0x 0
	[instruction: 0x164602a / 	[function:2a]
	<Function: SLT> < rs < rt? > :rs:R[11] 0x 0, rt:R[4] 0x 0
	=> rd:R[12] 0x   0, <FALSE>
	[instruction: 0x100c0000 / opcode : BEQ < rs=rt? -> 
	[instruction] 0x100c0000
	rs:R[ 0] 0x 0, rt:R[12] 0x 0
	<TRUE & JUMP> -> <jump_to> 0x   0
	[instruction: 0x24080000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 8], [im: 0x   0] 
=> 	rt:R[ 8] 0x 0
	[instruction: 0x24090001 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 9], [im: 0x   1] 
=> 	rt:R[ 9] 0x 0
	[instruction: 0x240a0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[10], [im: 0x   0] 
=> 	rt:R[10] 0x 0
	[instruction: 0x240b0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[11], [im: 0x   0] 
=> 	rt:R[11] 0x 0
	[instruction: 0x164602a / 	[function:2a]
	<Function: SLT> < rs < rt? > :rs:R[11] 0x 0, rt:R[4] 0x 0
	=> rd:R[12] 0x   0, <FALSE>
	[instruction: 0x100c0000 / opcode : BEQ < rs=rt? -> 
	[instruction] 0x100c0000
	rs:R[ 0] 0x 0, rt:R[12] 0x 0
	<TRUE & JUMP> -> <jump_to> 0x   0
	[instruction: 0x24080000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 8], [im: 0x   0] 
=> 	rt:R[ 8] 0x 0
	[instruction: 0x24090001 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 9], [im: 0x   1] 
=> 	rt:R[ 9] 0x 0
	[instruction: 0x240a0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[10], [im: 0x   0] 
=> 	rt:R[10] 0x 0
	[instruction: 0x240b0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[11], [im: 0x   0] 
=> 	rt:R[11] 0x 0
	[instruction: 0x164602a / 	[function:2a]
	<Function: SLT> < rs < rt? > :rs:R[11] 0x 0, rt:R[4] 0x 0
	=> rd:R[12] 0x   0, <FALSE>
	[instruction: 0x100c0000 / opcode : BEQ < rs=rt? -> 
	[instruction] 0x100c0000
	rs:R[ 0] 0x 0, rt:R[12] 0x 0
	<TRUE & JUMP> -> <jump_to> 0x   0
	[instruction: 0x24080000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 8], [im: 0x   0] 
=> 	rt:R[ 8] 0x 0
	[instruction: 0x24090001 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 9], [im: 0x   1] 
=> 	rt:R[ 9] 0x 0
	[instruction: 0x240a0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[10], [im: 0x   0] 
=> 	rt:R[10] 0x 0
	[instruction: 0x240b0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[11], [im: 0x   0] 
=> 	rt:R[11] 0x 0
	[instruction: 0x164602a / 	[function:2a]
	<Function: SLT> < rs < rt? > :rs:R[11] 0x 0, rt:R[4] 0x 0
	=> rd:R[12] 0x   0, <FALSE>
	[instruction: 0x100c0000 / opcode : BEQ < rs=rt? -> 
	[instruction] 0x100c0000
	rs:R[ 0] 0x 0, rt:R[12] 0x 0
	<TRUE & JUMP> -> <jump_to> 0x   0
	[instruction: 0x24080000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 8], [im: 0x   0] 
=> 	rt:R[ 8] 0x 0
	[instruction: 0x24090001 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 9], [im: 0x   1] 
=> 	rt:R[ 9] 0x 0
	[instruction: 0x240a0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[10], [im: 0x   0] 
=> 	rt:R[10] 0x 0
	[instruction: 0x240b0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[11], [im: 0x   0] 
=> 	rt:R[11] 0x 0
	[instruction: 0x164602a / 	[function:2a]
	<Function: SLT> < rs < rt? > :rs:R[11] 0x 0, rt:R[4] 0x 0
	=> rd:R[12] 0x   0, <FALSE>
	[instruction: 0x100c0000 / opcode : BEQ < rs=rt? -> 
	[instruction] 0x100c0000
	rs:R[ 0] 0x 0, rt:R[12] 0x 0
	<TRUE & JUMP> -> <jump_to> 0x   0
	[instruction: 0x24080000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 8], [im: 0x   0] 
=> 	rt:R[ 8] 0x 0
	[instruction: 0x24090001 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 9], [im: 0x   1] 
=> 	rt:R[ 9] 0x 0
	[instruction: 0x240a0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[10], [im: 0x   0] 
=> 	rt:R[10] 0x 0
	[instruction: 0x240b0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[11], [im: 0x   0] 
=> 	rt:R[11] 0x 0
	[instruction: 0x164602a / 	[function:2a]
	<Function: SLT> < rs < rt? > :rs:R[11] 0x 0, rt:R[4] 0x 0
	=> rd:R[12] 0x   0, <FALSE>
	[instruction: 0x100c0000 / opcode : BEQ < rs=rt? -> 
	[instruction] 0x100c0000
	rs:R[ 0] 0x 0, rt:R[12] 0x 0
	<TRUE & JUMP> -> <jump_to> 0x   0
	[instruction: 0x24080000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 8], [im: 0x   0] 
=> 	rt:R[ 8] 0x 0
	[instruction: 0x24090001 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 9], [im: 0x   1] 
=> 	rt:R[ 9] 0x 0
	[instruction: 0x240a0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[10], [im: 0x   0] 
=> 	rt:R[10] 0x 0
	[instruction: 0x240b0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[11], [im: 0x   0] 
=> 	rt:R[11] 0x 0
	[instruction: 0x164602a / 	[function:2a]
	<Function: SLT> < rs < rt? > :rs:R[11] 0x 0, rt:R[4] 0x 0
	=> rd:R[12] 0x   0, <FALSE>
	[instruction: 0x100c0000 / opcode : BEQ < rs=rt? -> 
	[instruction] 0x100c0000
	rs:R[ 0] 0x 0, rt:R[12] 0x 0
	<TRUE & JUMP> -> <jump_to> 0x   0
	[instruction: 0x24080000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 8], [im: 0x   0] 
=> 	rt:R[ 8] 0x 0
	[instruction: 0x24090001 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 9], [im: 0x   1] 
=> 	rt:R[ 9] 0x 0
	[instruction: 0x240a0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[10], [im: 0x   0] 
=> 	rt:R[10] 0x 0
	[instruction: 0x240b0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[11], [im: 0x   0] 
=> 	rt:R[11] 0x 0
	[instruction: 0x164602a / 	[function:2a]
	<Function: SLT> < rs < rt? > :rs:R[11] 0x 0, rt:R[4] 0x 0
	=> rd:R[12] 0x   0, <FALSE>
	[instruction: 0x100c0000 / opcode : BEQ < rs=rt? -> 
	[instruction] 0x100c0000
	rs:R[ 0] 0x 0, rt:R[12] 0x 0
	<TRUE & JUMP> -> <jump_to> 0x   0
	[instruction: 0x24080000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 8], [im: 0x   0] 
=> 	rt:R[ 8] 0x 0
	[instruction: 0x24090001 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[ 9], [im: 0x   1] 
=> 	rt:R[ 9] 0x 0
	[instruction: 0x240a0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[10], [im: 0x   0] 
=> 	rt:R[10] 0x 0
	[instruction: 0x240b0000 / opcode : ADDIU(rt=rs+Imm)]	rs:$[ 0], rt:$[11], [im: 0x   0] 
=> 	rt:R[11] 0x 0
	[instruction: 0x164602a / 	[function:2a]
	<Function: SLT> < rs < rt? > :rs:R[11] 0x 0, rt:R[4] 0x 0
	=> rd:R[12] 0x   0, <FALSE>
